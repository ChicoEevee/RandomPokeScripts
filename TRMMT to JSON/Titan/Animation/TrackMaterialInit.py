# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Animation

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TrackMaterialInit(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TrackMaterialInit()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTrackMaterialInit(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TrackMaterialInit
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TrackMaterialInit
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrackMaterialInit
    def List(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Titan.Animation.TrackMaterialValueList import TrackMaterialValueList
            obj = TrackMaterialValueList()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def TrackMaterialInitStart(builder):
    builder.StartObject(2)

def Start(builder):
    TrackMaterialInitStart(builder)

def TrackMaterialInitAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    TrackMaterialInitAddName(builder, name)

def TrackMaterialInitAddList(builder, list):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(list), 0)

def AddList(builder, list):
    TrackMaterialInitAddList(builder, list)

def TrackMaterialInitEnd(builder):
    return builder.EndObject()

def End(builder):
    return TrackMaterialInitEnd(builder)
