# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Animation

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TrackMaterialValue(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TrackMaterialValue()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTrackMaterialValue(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TrackMaterialValue
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TrackMaterialValue
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # TrackMaterialValue
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # TrackMaterialValue
    def Config0(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # TrackMaterialValue
    def Config1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # TrackMaterialValue
    def Config2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def TrackMaterialValueStart(builder):
    builder.StartObject(5)

def Start(builder):
    TrackMaterialValueStart(builder)

def TrackMaterialValueAddTime(builder, time):
    builder.PrependFloat32Slot(0, time, 0.0)

def AddTime(builder, time):
    TrackMaterialValueAddTime(builder, time)

def TrackMaterialValueAddValue(builder, value):
    builder.PrependFloat32Slot(1, value, 0.0)

def AddValue(builder, value):
    TrackMaterialValueAddValue(builder, value)

def TrackMaterialValueAddConfig0(builder, config0):
    builder.PrependUint32Slot(2, config0, 0)

def AddConfig0(builder, config0):
    TrackMaterialValueAddConfig0(builder, config0)

def TrackMaterialValueAddConfig1(builder, config1):
    builder.PrependUint32Slot(3, config1, 0)

def AddConfig1(builder, config1):
    TrackMaterialValueAddConfig1(builder, config1)

def TrackMaterialValueAddConfig2(builder, config2):
    builder.PrependUint32Slot(4, config2, 0)

def AddConfig2(builder, config2):
    TrackMaterialValueAddConfig2(builder, config2)

def TrackMaterialValueEnd(builder):
    return builder.EndObject()

def End(builder):
    return TrackMaterialValueEnd(builder)
