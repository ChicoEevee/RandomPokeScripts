# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Model

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MaterialMapper(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MaterialMapper()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMaterialMapper(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MaterialMapper
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MaterialMapper
    def MeshName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MaterialMapper
    def MaterialName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MaterialMapper
    def LayerName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def MaterialMapperStart(builder):
    builder.StartObject(3)

def Start(builder):
    MaterialMapperStart(builder)

def MaterialMapperAddMeshName(builder, meshName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(meshName), 0)

def AddMeshName(builder, meshName):
    MaterialMapperAddMeshName(builder, meshName)

def MaterialMapperAddMaterialName(builder, materialName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(materialName), 0)

def AddMaterialName(builder, materialName):
    MaterialMapperAddMaterialName(builder, materialName)

def MaterialMapperAddLayerName(builder, layerName):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(layerName), 0)

def AddLayerName(builder, layerName):
    MaterialMapperAddLayerName(builder, layerName)

def MaterialMapperEnd(builder):
    return builder.EndObject()

def End(builder):
    return MaterialMapperEnd(builder)
